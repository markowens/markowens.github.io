- In this last video, we saw how to use lists
to store a collection of data.
Lists, we saw, are mutable.
Which means you can change their elements at any time.
In this lesson, we'll learn about tuples.
Tuples are a way of grouping data
but because they're immutable,
they are valuable in a number
of situations for data analysis.
You won't need to know
a lot of details about tuples
to use them effectively, however.
So, this will be a fairly short intro.
By the end of this video,
you'll know how to create tuples
and perform some basic tuple operations.
Let's start by creating a tuple.
Usually, tuples are used to
put together information connected in some way.
Here, let's put together information about a car.
I'll put together the car's manufacturer, Honda.
Its model, Civic.
The fact it has four doors
and the year 2017 that it was built.
Visualizing this,
we have a collection of different data types
together in one tuple.
Just like a list,
I can ask for an element,
like this.
We ask for the first element
and starting with zero indexing,
the first is Civic.
Also like a list,
we can ask for it's length.
It has four elements.
Just like a list,
we can also iterate over the elements in tuple
by saying, for i in tuple.
Where things diverge
is if you try to change a tuple.
Here, I'm trying to change
the year of the car to be 2018.
If I try this,
I get an error.
And while this might seem inconvenient,
it's actually really important.
In fact, if there's one thing
I want you to take away from this video,
is that tuple immutability means
that you can trust it to never change.
Immutability is important two key ways.
The first, is more general
as in regards to parallel computing.
Parallel computing is a key facet of data science.
Which we stress heavily in our
fourth course of this micro masters.
In parallel computing, data which can change
make parallel computation harder
because you have to make sure
everyone working on the problem sees those changes.
But if data can't change,
you can just send copies of it to compute nodes
and no one has to worry about it changing on them
while they're computing.
This is really just a forward pointer
to a concept you'll see a bunch more of
in that last course.
The second reason we care
is more concrete
and actually applies to our next video.
tuples can be used as keys in the dictionaries.
Because the tuple doesn't change,
the dictionary can organize
based on its initial value
without worries about the key getting changed
by somebody
with a reference to it.
Now that we know about tuples,
we can learn about dictionaries.
And we'll do that in our next video.