- In our previous video, we use various approaches
to index and to ndarrays,
based on the locations in the array.
In Data Science we often find ourselves
caring a great deal about the values in the array.
For example, what if we wanted to find all ages,
less than zero or greater than 100,
and then do something with those values.
To do that kind of Data Clean, we need Boolean Indexing.
By the end of this video,
you should be able to use conditional indexing
to access and permute relevant data in ndarrays.
To get started, let's create another basic sample array
with three rows and two columns.
What we'll do next is use conditionals
combined with ndarrays to get back boolean arrays.
Here I'm asking for a filter which will be true
for every element greater than 15,
and false for every element less than 15.
The filter we've just created is the same size and shape
as the original ndarray.
And for each element it has either a true or false value.
We can now use that filter as indices to the larger array
asking for those values for which the filter is true.
What we'll get back is all the values greater than 15.
To be honest, this is pretty slick in itself.
What a great way to pull out values,
matching a particular criteria.
Boolean actually expresses in a single step.
Here I'm asking for all the values in an_array
where an_array is greater than 15.
This creates a boolean filter and then applies it
all in one step, like this.
We can have even more complex logic here.
Let's try to get all the values between 20 and 30.
To do that, I'm gonna make these changes.
So first I'm gonna say, an_array is greater than 20,
and ...
An_array ...
is less than 30.
Or, we can even ask for even values
just using the modulo symbol.
So I can do that like this ...
Gonna say an_array modulo two equals, equals zero.
Let's use that same conditional,
but now, let's actually change the elements
based on the condition.
So this line here, we'll select all the elements
in an_array where the an_array value is even,
and we'll add 100 to it.
That's exactly what happens.
Filters are useful in many Data Science operations
and other Computer Science algorithms involving matrices.
For example, green screening of images
takes advantage of filter functions
to replace green pixels in the background
with another image of your choice.
We'll see more of this as we go through the course,
primarily when we're trying to clean up our data.