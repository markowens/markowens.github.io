- Now that we have learned about lists and dictionaries,
we'll see that Python actually allows us to build
lists and dictionaries in an easy way called comprehension.
By the end of this video, you'll be able
to build lists and dictionaries using comprehension.
As I've said comprehension is a way
to build lists or dictionaries quickly.
Suppose I want to build a list
of the squares from one to 10.
You're probably tempted to set up a loop for this.
If you have a background in other languages.
It turns out, we can do this really easily in Python.
This command here will build this list for us.
Notice how short it is.
But there are a number of pieces here.
First, let's focus on the "for i in range(1,11)".
This will provide i with the values one through 10
just like we're used to with for loops.
Next let's focus on the first part of the statement,
i**2 means i squared.
We're saying we want i squared for each of the values
of i which we know will be one through 10.
The result is a list with all the squares
from one through 10 just like we wanted.
Okay, your turn now.
Let's start by just making a list
with the values zero through five.
Stop the video.
Think about what belongs here.
Try to write it down or test it out, and then resume.
Hopefully your answer was pretty close to this.
Let's see just a few more examples of comprehension.
If I want to have all the even values between zero and 20,
I can just use that third parameter range
to specify every other value.
If I want to have a list with 10 values
and it's alternating zero and one,
I can just use the modulo operator.
Okay, one more.
What if I want a list with 10 random integers
between zero and five.
I'll have to start by importing random.
Then, I can use a library call for random.randint(0,5)
10 times, and I'll get back to the desired list.
Hopefully you're starting to see how easy it can be
to generate these lists.
We'll use these both to help create examples to learn from
and also to help as filters or masks
when we're working with data later in the course.
Before we go through, I want to briefly mention
that you can use these to build dictionaries as well.
The only major difference from lists comprehension
is now we're specifying both the key and the value.
Like we'd expect, the key is on the left side of the colon
and the value is on the right side.
I recommend you play with this a bit yourself.
For example, could you build a dictionary of letters
from capital A to capital Z as values
and their corresponding numeric ASCII values as the key?
You might find the CHR function useful.
Okay, pause the video.
Take a minute and try to do this yourself.
Then, resume the video, I'll show you the answer.
This actually isn't too bad with the CHR function
and the ASCII numbering for letters.
I hope you tried to do this for yourself
to get more practice in Python
before you looked at the answer.
Next, we'll look briefly at one more data structure sets.
I'll see you soon.