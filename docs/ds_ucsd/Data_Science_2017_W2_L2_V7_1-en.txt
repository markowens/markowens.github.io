- I'd like to briefly introduce you to sets in Python.
Sets are useful data structure because they support
a number of useful math operations and because they
only allow unique elements.
By the end of this video, you'll be able to create sets
in Python and use set operations.
Sets of three qualities which will be useful
for us going forward.
The first is they, like dictionaries, are unordered.
This again, like dictionaries, allows them
to be incredibly fast for a number of key operations.
The second is that they hold unique elements
which means you cannot have duplicate values.
The third is that they support useful set operations
including union and intersection.
Let's do some examples to see why sets can be handy.
We can create sets by using the keyword "set".
Then, pass as an argument to set, a list.
The values that we want to have in the set.
Here, we're passing a list of my favorite colors.
This will produce the set of colors.
Notice that the set we got back is in a different order
than the list we provided.
Again, sets are unordered so this is completely okay.
Now let's see how to add to this set.
By calling them at the add, we can add a new color.
We can see that we've successfully added yellow.
If I try to add something which is already there,
it won't change the set.
This makes sense as only unique items can be in sets.
Starting with that original list,
we can remove items by using either
the remove or discard method.
Looking at discard, you simply want to pass
at the element you want discarded in order to remove it.
I generally prefer to use discard because if you try
to discard an element which isn't in the set,
it will just do nothing.
If you try to use the remove method and the element
isn't in the set, it will throw an error.
Okay let's create two sets.
Here we have my colors which are blue, green, and red,
and Ilkays' colors which I've arbitrarily made
to be blue and yellow.
First, let's set what the union does.
Just like we'd expect, union gives us items
that are in either Ilkays' set or my set of colors.
This can be useful if you want to know
all the unique items that are in two separate sets.
Notice that blue is in both sets,
but it appears only once in the result.
To be honest, most of the time when I find myself
using sets, it's because I want
to pull out the unique items across two groups
of elements or to find the unique items in common.
To find the unique items in common,
we'd use the intersect method.
Calling intersection on these two sets gives us back blue
because blue is in both of the sets.
I should mention that you don't have
to use the union method.
You can use the | operator.
Likewise, you don't have to use the intersection method.
You can just use the ampersands symbol.
If you're looking for more operations than sets,
I recommend you check out the Python reference materials
linked to the bottom.
The big takeaway I want you to have from this
is that if you're trying to figure out unique elements
in common between two groups or looking to combine groups
to find unique elements,
sets are a really handy data structure
to help you accomplish this.